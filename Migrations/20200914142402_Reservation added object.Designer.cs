// <auto-generated />
using System;
using IParkT_Authentication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IParkT_Authentication.Migrations
{
    [DbContext(typeof(IParkTDB))]
    [Migration("20200914142402_Reservation added object")]
    partial class Reservationaddedobject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IParkT_Authentication.Models.Car", b =>
                {
                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("utilizadorusername")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LicensePlate");

                    b.HasIndex("utilizadorusername");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("IParkT_Authentication.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GpsCoords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkSpotType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParkId");

                    b.ToTable("Park");

                    b.HasData(
                        new
                        {
                            ParkId = 3,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Teacher"
                        },
                        new
                        {
                            ParkId = 4,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Teacher"
                        },
                        new
                        {
                            ParkId = 5,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Aux"
                        },
                        new
                        {
                            ParkId = 6,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Aux"
                        },
                        new
                        {
                            ParkId = 7,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Student"
                        },
                        new
                        {
                            ParkId = 8,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Student"
                        },
                        new
                        {
                            ParkId = 9,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Student"
                        },
                        new
                        {
                            ParkId = 10,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Student"
                        },
                        new
                        {
                            ParkId = 11,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Student"
                        },
                        new
                        {
                            ParkId = 12,
                            GpsCoords = "39°36'01.8\"N 8°23'29.3\"W",
                            ParkSpotType = "Principal"
                        });
                });

            modelBuilder.Entity("IParkT_Authentication.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParkId")
                        .HasColumnType("int");

                    b.Property<string>("carLicensePlate")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReservationId");

                    b.HasIndex("ParkId");

                    b.HasIndex("carLicensePlate");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("IParkT_Authentication.Models.Utilizador", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("IParkT_Authentication.Models.Car", b =>
                {
                    b.HasOne("IParkT_Authentication.Models.Utilizador", "utilizador")
                        .WithMany("Cars")
                        .HasForeignKey("utilizadorusername");
                });

            modelBuilder.Entity("IParkT_Authentication.Models.Reservation", b =>
                {
                    b.HasOne("IParkT_Authentication.Models.Park", "park")
                        .WithMany("Reservations")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IParkT_Authentication.Models.Car", "car")
                        .WithMany("Reservations")
                        .HasForeignKey("carLicensePlate");
                });
#pragma warning restore 612, 618
        }
    }
}
